testt@points[3]
testt@points[2]
testt@points[1]
testt@points$xy
testt@points$time
Xs(testt)
setClass("trajectory",
representation(points = "data.frame",
saccades = "vector")
)            #array?df
setGeneric("Xs",                                       #Xs is exist!
function(z){standardGeneric("Xs")}
)
setMethod("Xs",                                        #Xs is method
"trajectory",                                #It could be used with Obj-"trajectory"
function(z){                                 #z is input param
return(z@points)                    #
}
)
setGeneric("FillSaccades",
function(object, count){standardGeneric("FillSaccades")}
)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-rep(data.frame(a<-c(1,2,3),b="e"),count)
while(p<=count){
#object@saccades[1]<-new("Saccade",
# StartPoint=new("Point", x=1, y=1))
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades[[1]]@StartPoint@x
testt@saccades[[1]]
testt@saccades[1]@StartPoint@x
testt@saccades[1]
testt@saccades
testt@saccades[1]
testt@saccades[2]
testt@saccades[7]
f<-rep(data.frame(a<-c(1,2,3),b="e"),4)
f
f[1]
f[2]
f<-data.frame(a<-c(1,2,3),b="e")
f
f$a
f$b
f$a[1]
f$a[2]
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
while(p<=count){
object@saccades$StartPoint[p]<-list(x=p,y=p)
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-rep(data.frame(StartPoint=list(x=p,y=p)),count)
while(p<=count){
object@saccades<-data.frame(StartPoint=list(x=p,y=p))
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades[7]
testt@saccades$StartPoint[1]
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-rep(list(x=p,y=p),count))
while(p<=count){
object@saccades<-data.frame(StartPoint[p]<-list(x=p,y=p))
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
object@saccades<-data.frame(StartPoint<-rep(list(x=p,y=p),count))
p<-1
while(p<=count){
#object@saccades<-data.frame(StartPoint[p]<-list(x=p,y=p))
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades<-data.frame(StartPoint[p][1]=p
object@saccades<-data.frame(StartPoint[p][2]=p
p<-p+1
}
}
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades<-data.frame(StartPoint[p][1]=p)
object@saccades<-data.frame(StartPoint[p][2]=p)
p<-p+1
}
}
)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades<-data.frame(StartPoint[p][1]=p)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades<-data.frame(StartPoint[p][1]<-p)
object@saccades<-data.frame(StartPoint[p][2]<-p)
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
#object@saccades<-data.frame(StartPoint[p][1]<-p)
#object@saccades<-data.frame(StartPoint[p][2]<-p)
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades<-data.frame(StartPoint[1][1]<-2)
testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$<-StartPoint[1][1]<-2
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1][1]<-2
testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1,1]<-2
testt@saccades$StartPoint[1,2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1,X1]<-2
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1,"X1"]<-2
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint["X1",1]<-2
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint(1,1)<-2
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades@StartPoint(1,1)<-2
testt@saccades$StartPoint[1,2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades@StartPoint[1,1]<-2
testt@saccades<-data.frame(StartPoint<-matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1,1]<-2
testt@saccades$StartPoint[1,2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1,1]<-2
testt@saccades$StartPoint[1,2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1][1]<-2
testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1][1]<-2
#testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint[1][1]=2
#testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
#testt@saccades$StartPoint[1][1]=2
#testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
#testt@saccades$StartPoint[1][1]=2
#testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint.1
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
#testt@saccades$StartPoint[1][1]=2
#testt@saccades$StartPoint[1][2]<-2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint.1[1]
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint.
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint.1.2
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades$StartPoint.1
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint<-matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades$StartPoint.1[p]<-p
object@saccades$StartPoint.2[p]<-p
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<=count){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
setClass("trajectory",
representation(points = "data.frame",
saccades = "data.frame")
)            #array?df
setGeneric("Xs",                                       #Xs is exist!
function(z){standardGeneric("Xs")}
)
setMethod("Xs",                                        #Xs is method
"trajectory",                                #It could be used with Obj-"trajectory"
function(z){                                 #z is input param
return(z@points)                    #
}
)
setGeneric("FillSaccades",
function(object, count){standardGeneric("FillSaccades")}
)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
testt@saccades<-data.frame(StartPoint=matrix(nrow=5,ncol=2))
testt@saccades$StartPoint.1[1]=2
testt@saccades$StartPoint.2[1]=2
#testt@saccades<-data.frame(StartPoint[1][2]<-2)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
print(object@saccades)
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)),saccades)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)),
saccades=data.frame(StartPoint=matrix(nrow=count,ncol=2)))
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)),
saccades=data.frame(StartPoint=matrix(nrow=5,ncol=2)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
testt@saccades
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
print(object)
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
self@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
self@saccades$StartPoint.1[p]=p
self@saccades$StartPoint.2[p]=p
p<-p+1
print(self)
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
FillSaccades(testt,5)
Xs(testt)
setGeneric("Xs",                                       #Xs is exist!
function(z){standardGeneric("Xs")}
)
setMethod("Xs",                                        #Xs is method
"trajectory",                                #It could be used with Obj-"trajectory"
function(z){
z@points$time<-c(1,1,1,1,1)                                            #z is input param
return(z@points)                    #
}
)
setGeneric("FillSaccades",
function(object, count){standardGeneric("FillSaccades")}
)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
print(object)
}
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
testt@points$time
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
print(object)
}
return(object)
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
testt<-FillSaccades(testt,5)
testt@saccades
testt
setClass("trajectory",
representation(points = "data.frame",
saccades = "data.frame")
)            #array?df
setGeneric("Xs",                                       #Xs is exist!
function(z){standardGeneric("Xs")}
)
setMethod("Xs",                                        #Xs is method
"trajectory",                                #It could be used with Obj-"trajectory"
function(z){
z@points$time<-c(1,1,1,1,1)                                            #z is input param
return(z)                    #
}
)
setGeneric("FillSaccades",
function(object, count){standardGeneric("FillSaccades")}
)
setMethod("FillSaccades",
"trajectory",
function(object, count){
p<-1
object@saccades<-data.frame(StartPoint=matrix(nrow=count,ncol=2))
while(p<count+1){
object@saccades$StartPoint.1[p]=p
object@saccades$StartPoint.2[p]=p
p<-p+1
}
return(object)
}
)
testt <- new("trajectory", points=data.frame(xy=matrix(nrow=5,ncol=2), time=c(1,2,3,4,5)))
testt@points$time
Xs(testt)
testt<-FillSaccades(testt,5)
testt
object@saccades<-data.frame(StartPoint=c(list(x=1,y=2))
testt
object@saccades<-data.frame(StartPoint=c(list(x=1,y=2)))
testt
